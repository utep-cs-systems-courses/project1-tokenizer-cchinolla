#ifndef _TOKENIZER-
#ifndef _TOKENIZER_
#include <stdio.h>
#include <stdlib.h>
#include "tokenizer.h"
#define true 1
#define false 0


/*Return true (non-zero)  if c is a whitespace character ('\t' or ' ').
  Zero terminators are not printable (therefore false) */
int space_char(char c){
  if(c == ' ' || c == '\t'|| c == '\n'){
    return true;
  }
  else{
       return false;
       }
}  
 

/* Return true (non-zero) if c is a non-whitespace character (not tab or space).
   Zero terminators are not printable (therefore false) */
int non_space_char(char c){
  if(c != '\t' || c != ' '|| c != '\n'){
    return true;
  }
  else{
    return false;
  }

/*Returns a pointer to the first character of the next space-separated word in
  zero-terminated str. Return a sero pointer if str does not contain any words. */
  char  *word_start(char *str){
    //while there's a space at the beg of str, keep moving on
    while(space_char(*str){
	str++;
      }
      //if not then return the pointer of the 1st character
      return str;
  }


/*Returns a pointer terminator char following *word*/
    char *word_terminator(char *word){
      //start at word start in case there was empty spaces in the beg so it could get rid of them
      *word = word_start(word);
      //move through str/word until empty space
      while(non_space_char(*word)){
	  word++;
	}
      //
	return word;
      }

/*Counts the number of words in the string argument. */
      int count_words(char *str){
	int i = 0;
	int count = 0;
	while(str != word_terminaator(str)){
	  str = word_terminator(str);
	  count++;
	}
	return count;
      }

/*Returns a freshly allocated new zero-terminated string
  containing <len> chars from <inStr> */
      char *copy_str(char *inStr, short len){
      }

/*Returns a freshly allocated zero-terminated vector of freshly
  allocated space-separated tokens from zero-terminated str.*/
char **tokenize(char* str);


/*Prints all tokens. */
void print_tokens(char **tokens);


/* Frees all tokens and the vector coontaining themxxx. */
void free_tokens(char **tokens);
 
#endif
